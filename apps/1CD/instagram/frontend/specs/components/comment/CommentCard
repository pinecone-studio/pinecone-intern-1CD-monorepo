// import { fireEvent, render, waitFor } from '@testing-library/react';
// import { MockedProvider } from '@apollo/client/testing';
// import { GetCommentsDocument } from '@/generated';
// import { expect } from '@jest/globals';
// import { CommentCard } from '@/app/(main)/_components/comment/CommentCard';

// const commentMock2 = [
//   {
//     request: {
//       query: GetCommentsDocument,
//       variables: {
//         postId: 'post1',
//       },
//     },

//     result: {
//       data: {
//         getComments: [
//           {
//             _id: 'comment1',
//             postId: 'post1',
//             commentText: 'Wooow amjilt',
//             commentedUser: {
//               _id: 'user1',
//               userName: 'B190_$',
//               fullName: 'Bilgun',
//             },
//           },
//           {
//             _id: 'comment2',
//             postId: 'post1',
//             commentText: 'Wooow amjilt',
//             commentedUser: {
//               _id: 'user2',
//               userName: 'B190_$',
//               fullName: 'Bilgun',
//             },
//           },
//         ],
//       },
//     },
//   },
// ];

// describe('get comments', () => {
//   const setOpenDeleteCommentModal = jest.fn();

//   beforeEach(() => {
//     jest.clearAllMocks();
//   });
//   it('should render comments', async () => {
//     (setOpenDeleteCommentModal as jest.Mock).mockReturnValue(true);
//     const { getByTestId } = render(
//       <MockedProvider mocks={commentMock2}>
//         <CommentCard id="post1" />
//       </MockedProvider>
//     );
//     await waitFor(() => expect(getByTestId('getComments')));
//     fireEvent.click(getByTestId('deleteModalBtn'));
//   });
// });
